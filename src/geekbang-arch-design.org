#+title: 架构设计
#+options: num:nil


** [[https://time.geekbang.org/column/article/89668][开篇词 | 怎样成长为优秀的软件架构师？]]

开篇词 | 怎样成长为优秀的软件架构师？

** [[https://time.geekbang.org/column/article/90170][01 | 架构设计的宏观视角]]

01 | 架构设计的宏观视角

** [[https://time.geekbang.org/column/article/91007][02 | 大厦基石：无生有，有生万物]]

02 | 大厦基石：无生有，有生万物

** [[https://time.geekbang.org/column/article/91425][03 | 汇编：编程语言的诞生]]

03 | 汇编：编程语言的诞生

** [[https://time.geekbang.org/column/article/92419][04 | 编程语言的进化]]

04 | 编程语言的进化

** [[https://time.geekbang.org/column/article/93130][05 | 思考题解读：如何实现可自我迭代的计算机？]]

05 | 思考题解读：如何实现可自我迭代的计算机？

** [[https://time.geekbang.org/column/article/93315][06 | 操作系统进场]]

06 | 操作系统进场

** [[https://time.geekbang.org/column/article/93802][07 | 软件运行机制及内存管理]]

07 | 软件运行机制及内存管理

** [[https://time.geekbang.org/column/article/94486][08 | 操作系统内核与编程接口]]

08 | 操作系统内核与编程接口

** [[https://time.geekbang.org/column/article/94991][09 | 外存管理与文件系统]]

09 | 外存管理与文件系统

** [[https://time.geekbang.org/column/article/95660][10 | 输入和输出设备：交互的演进]]

10 | 输入和输出设备：交互的演进

** [[https://time.geekbang.org/column/article/96324][11 | 多任务：进程、线程与协程]]

11 | 多任务：进程、线程与协程

** [[https://time.geekbang.org/column/article/96994][12 | 进程内协同：同步、互斥与通讯]]

12 | 进程内协同：同步、互斥与通讯

** [[https://time.geekbang.org/column/article/97617][13 | 进程间的同步互斥、资源共享与通讯]]

13 | 进程间的同步互斥、资源共享与通讯

** [[https://time.geekbang.org/column/article/98406][14 | IP 网络：连接世界的桥梁]]

14 | IP 网络：连接世界的桥梁

** [[https://time.geekbang.org/column/article/99184][15 | 可编程的互联网世界]]

15 | 可编程的互联网世界

** [[https://time.geekbang.org/column/article/99636][16 | 安全管理：数字世界的守护]]

16 | 安全管理：数字世界的守护

** [[https://time.geekbang.org/column/article/100140][17 | 架构：需求分析 (上)]]

17 | 架构：需求分析 (上)

** [[https://time.geekbang.org/column/article/100930][18 | 架构：需求分析 (下) · 实战案例]]

18 | 架构：需求分析 (下) · 实战案例

** [[https://time.geekbang.org/column/article/101498][19 | 基础平台篇：回顾与总结]]

19 | 基础平台篇：回顾与总结

** [[https://time.geekbang.org/column/article/102260][20 | 桌面开发的宏观视角]]

20 | 桌面开发的宏观视角

** [[https://time.geekbang.org/column/article/104436][21 | 图形界面程序的框架]]

21 | 图形界面程序的框架

** [[https://time.geekbang.org/column/article/105356][22 | 桌面程序的架构建议]]

22 | 桌面程序的架构建议

** [[https://time.geekbang.org/column/article/106156][23 | Web开发：浏览器、小程序与PWA]]

23 | Web开发：浏览器、小程序与PWA

** [[https://time.geekbang.org/column/article/107128][24 | 跨平台与 Web 开发的建议]]

24 | 跨平台与 Web 开发的建议

** [[https://time.geekbang.org/column/article/107954][25 | 桌面开发的未来]]

25 | 桌面开发的未来

** [[https://time.geekbang.org/column/article/108887][26 | 实战（一）：怎么设计一个“画图”程序？]]

26 | 实战（一）：怎么设计一个“画图”程序？

** [[https://time.geekbang.org/column/article/109592][27 | 实战（二）：怎么设计一个“画图”程序？]]

27 | 实战（二）：怎么设计一个“画图”程序？

** [[https://time.geekbang.org/column/article/110460][28 | 实战（三）：怎么设计一个“画图”程序？]]

28 | 实战（三）：怎么设计一个“画图”程序？

** [[https://time.geekbang.org/column/article/111289][29 | 实战（四）：怎么设计一个“画图”程序？]]

29 | 实战（四）：怎么设计一个“画图”程序？

** [[https://time.geekbang.org/column/article/112106][30  | 实战（五）：怎么设计一个“画图”程序？]]

30  | 实战（五）：怎么设计一个“画图”程序？

** [[https://time.geekbang.org/column/article/113569][31 | 辅助界面元素的架构设计]]

31 | 辅助界面元素的架构设计

** [[https://time.geekbang.org/column/article/117783][32 | 架构：系统的概要设计]]

32 | 架构：系统的概要设计

** [[https://time.geekbang.org/column/article/118674][33 | 桌面开发篇：回顾与总结]]

33 | 桌面开发篇：回顾与总结

** [[https://time.geekbang.org/column/article/120049][34 | 服务端开发的宏观视角]]

34 | 服务端开发的宏观视角

** [[https://time.geekbang.org/column/article/125952][35 | 流量调度与负载均衡]]

35 | 流量调度与负载均衡

** [[https://time.geekbang.org/column/article/127490][36 | 业务状态与存储中间件]]

36 | 业务状态与存储中间件

** [[https://time.geekbang.org/column/article/129097][37 | 键值存储与数据库]]

37 | 键值存储与数据库

** [[https://time.geekbang.org/column/article/131310][38  | 文件系统与对象存储]]

38  | 文件系统与对象存储

** [[https://time.geekbang.org/column/article/132656][39  | 存储与缓存]]

39  | 存储与缓存

** [[https://time.geekbang.org/column/article/134384][40 | 服务端的业务架构建议]]

40 | 服务端的业务架构建议

** [[https://time.geekbang.org/column/article/135789][41 | 实战（一）：“画图”程序后端实战]]

41 | 实战（一）：“画图”程序后端实战

** [[https://time.geekbang.org/column/article/136884][42 | 实战（二）：“画图”程序后端实战]]

42 | 实战（二）：“画图”程序后端实战

** [[https://time.geekbang.org/column/article/138400][43 | 实战（三）：“画图”程序后端实战]]

43 | 实战（三）：“画图”程序后端实战

** [[https://time.geekbang.org/column/article/140069][44 | 实战（四）：“画图”程序后端实战]]

44 | 实战（四）：“画图”程序后端实战

** [[https://time.geekbang.org/column/article/142032][45 | 架构：怎么做详细设计？]]

45 | 架构：怎么做详细设计？

** [[https://time.geekbang.org/column/article/144263][46 | 服务端开发篇：回顾与总结]]

46 | 服务端开发篇：回顾与总结

** [[https://time.geekbang.org/column/article/144801][加餐 | 如何做HTTP服务的测试？]]

加餐 | 如何做HTTP服务的测试？

** [[https://time.geekbang.org/column/article/144803][47 | 服务治理的宏观视角]]

47 | 服务治理的宏观视角

** [[https://time.geekbang.org/column/article/148208][48 | 事务与工程：什么是工程师思维？]]

48 | 事务与工程：什么是工程师思维？

** [[https://time.geekbang.org/column/article/150346][49 | 发布、升级与版本管理]]

49 | 发布、升级与版本管理

** [[https://time.geekbang.org/column/article/152342][50 | 日志、监控与报警]]

50 | 日志、监控与报警

** [[https://time.geekbang.org/column/article/154246][加餐 | 怎么保障发布的效率与质量？]]

加餐 | 怎么保障发布的效率与质量？

** [[https://time.geekbang.org/column/article/155500][51 | 故障域与故障预案]]

51 | 故障域与故障预案

** [[https://time.geekbang.org/column/article/157416][52 | 故障排查与根因分析]]

52 | 故障排查与根因分析

** [[https://time.geekbang.org/column/article/159848][53 | 过载保护与容量规划]]

53 | 过载保护与容量规划

** [[https://time.geekbang.org/column/article/161467][54 | 业务的可支持性与持续运营]]

54 | 业务的可支持性与持续运营

** [[https://time.geekbang.org/column/article/163112][55 | 云计算、容器革命与服务端的未来]]

55 | 云计算、容器革命与服务端的未来

** [[https://time.geekbang.org/column/article/164623][56 | 服务治理篇：回顾与总结]]

56 | 服务治理篇：回顾与总结

** [[https://time.geekbang.org/column/article/166014][57 | 心性：架构师的修炼之道]]

57 | 心性：架构师的修炼之道

** [[https://time.geekbang.org/column/article/167844][58 | 如何判断架构设计的优劣？]]

58 | 如何判断架构设计的优劣？

** [[https://time.geekbang.org/column/article/169113][59 | 少谈点框架，多谈点业务]]

59 | 少谈点框架，多谈点业务

** [[https://time.geekbang.org/column/article/170912][60 | 架构分解：边界，不断重新审视边界]]

60 | 架构分解：边界，不断重新审视边界

** [[https://time.geekbang.org/column/article/172004][加餐 | 实战：“画图程序” 的整体架构]]

加餐 | 实战：“画图程序” 的整体架构

** [[https://time.geekbang.org/column/article/173619][61 | 全局性功能的架构设计]]

61 | 全局性功能的架构设计

** [[https://time.geekbang.org/column/article/175236][62 | 重新认识开闭原则 (OCP)]]

62 | 重新认识开闭原则 (OCP)

** [[https://time.geekbang.org/column/article/176852][63 | 接口设计的准则]]

63 | 接口设计的准则

** [[https://time.geekbang.org/column/article/177746][64 | 不断完善的架构范式]]

64 | 不断完善的架构范式

** [[https://time.geekbang.org/column/article/178874][65 | 架构范式：文本处理]]

65 | 架构范式：文本处理

** [[https://time.geekbang.org/column/article/180396][66 | 架构老化与重构]]

66 | 架构老化与重构

** [[https://time.geekbang.org/column/article/181599][67 | 架构思维篇：回顾与总结]]

67 | 架构思维篇：回顾与总结

** [[https://time.geekbang.org/column/article/182924][68 | 软件工程的宏观视角]]

68 | 软件工程的宏观视角

** [[https://time.geekbang.org/column/article/183900][69 | 团队的共识管理]]

69 | 团队的共识管理

** [[https://time.geekbang.org/column/article/185234][70 | 怎么写设计文档？]]

70 | 怎么写设计文档？

** [[https://time.geekbang.org/column/article/186399][71 | 如何阅读别人的代码？]]

71 | 如何阅读别人的代码？

** [[https://time.geekbang.org/column/article/187641][72 | 发布单元与版本管理]]

72 | 发布单元与版本管理

** [[https://time.geekbang.org/column/article/188797][73 | 软件质量管理：单元测试、持续构建与发布]]

73 | 软件质量管理：单元测试、持续构建与发布

** [[https://time.geekbang.org/column/article/190127][74 | 开源、云服务与外包管理]]

74 | 开源、云服务与外包管理

** [[https://time.geekbang.org/column/article/191679][75 | 软件版本迭代的规划]]

75 | 软件版本迭代的规划

** [[https://time.geekbang.org/column/article/192408][76 | 软件工程的未来]]

76 | 软件工程的未来

** [[https://time.geekbang.org/column/article/193035][77 | 软件工程篇：回顾与总结]]

77 | 软件工程篇：回顾与总结

** [[https://time.geekbang.org/column/article/102283][热点观察| 我看Facebook发币（上）：区块链、比特币与Libra币]]

热点观察| 我看Facebook发币（上）：区块链、比特币与Libra币

** [[https://time.geekbang.org/column/article/102973][热点观察 | 我看Facebook发币（下）：深入浅出理解 Libra 币]]

热点观察 | 我看Facebook发币（下）：深入浅出理解 Libra 币

** [[https://time.geekbang.org/column/article/116087][课外阅读 | 从《孙子兵法》看底层的自然法则]]

课外阅读 | 从《孙子兵法》看底层的自然法则

** [[https://time.geekbang.org/column/article/112064][答疑解惑 | 想当架构师，我需要成为“全才”吗？]]

答疑解惑 | 想当架构师，我需要成为“全才”吗？

** [[https://time.geekbang.org/column/article/152196][用户故事 | 站在更高的视角看架构]]

用户故事 | 站在更高的视角看架构

** [[https://time.geekbang.org/column/article/193173][结束语 | 放下技术人的身段，用极限思维提升架构能力]]

结束语 | 放下技术人的身段，用极限思维提升架构能力

** [[https://time.geekbang.org/column/article/198432][结课问卷获奖用户名单]]

结课问卷获奖用户名单
