#+title: Getting Real

如果我们的口吻看起来好像无所不知，目中无人，请宽容我们。我们认为果敢地提出观点要比唯唯诺诺，模棱两可要好得多。 如果这是骄傲自大的形象，它就是。我们宁愿具有煽动性，也不愿意用“那要看…”这样的话来和稀泥。当然这些规则需要时间来完善或者打破。而且一些策略可能 不适合你的场合。请运用你的判断力和想象力。

这种强调更多一层的冷战竞争思维是行不通的死胡同。如此创造产品的方式是昂贵的，过分防御的，并且有点偏执不正常的。防御性的偏执的公司是做不到前瞻性思维的，他们只能做事后思维。他们不可能领导，只能跟从。

很多创业者的首要任务就是找投资者募集资金。但必须记住，当你寻求外部资金的时候就意味着你不得不向别人汇报。于是别人对你的期望值将提升。投资者无不希望他们能够收回资金 — 并且是以最快的速度收回。导致一个不幸的事实就是往往抢钱优先过做一个优质的产品。

资源拮据往往能激发想象力 当在有限的资源平台上运作，你往往会被迫更早的更紧迫的认识到这种压力。那是一件好事。有压力才会促使创新。 拮据也能迫你更早地将你的点子推出来 —这是另一件好事。这么跨出去一两个月后你就会比较清楚的了解这个点子是否有戏。这样一来，你就会在短时间内树立起自信心，不再那么急切寻求外部资金了。 如果你的点子行不通，是虚的（酸柠檬），那么就是重新来过的时候了。坏消息至少你现在知道比几个月后或几年后知道好。至少你比较容易退出。当有投资者涉入 的时候退出方案要复杂的多了。 如果你做软件只是想搞一度快钱，那么事实是瞒不住的。想很快的回本实践中是不大可能的。所以，专心做一个优质的软件，做出一个你和你的客户都能长久依赖的工具才是正道。

总会有一个这样误区：我们能做到准时地，在预算内发布一个规模完整的产品。这可以说完全不可能的，如果真是这样的话一定是以质量做为代价的。如果你不能在预定的时间和预算内完成所有的东西的话，就不要拉长时间和增加预算。相反的，把产品的外延缩小些。下一步总是有时间可以加东西进去 — 过后有的是时间，当下却是稍纵即逝的。

有时了解你的应用程序应该做成什么样子的最佳方式就是，认识到它不应该成为什么。搞清楚你的软件的对手是谁，就象点一盏灯，能照亮你前行的道路。你能从敌人那里得到的一个好处就是：一个非常清晰的营销理念。人们很容易被冲突对立挑动。并且通过把一个产品和另一个作比较能更多地了解这个产品。 选中了这么一个敌人，你给人们灌输了他们想要知道的对立的信息。这样一来，他们不仅能更好更快地认识你的产品，也会站到你的这边。这是一个吸引注意力和引 发产品倾向性的一个万无一失的方法。

热情是很容易凸显出来的，漠然也是同样难以掩饰的。如果你并非带着一种诚挚的心去对待手头上的产品，那么它留下的漠然与空白是几乎不可能掩饰的，不管一个设计作品表面看来多么精细吸引人。

反应快，敏捷，小质量的公司可以快速的改变他们整个业务模型，产品，特征集和营销信息。他们可以犯错并快速的修复。他们可以改变他们的优先级，产品组合和重点。还有最重要的，他们可以改变他们的想法 。

简单的规则，就像鸟群的模拟一样，导致复杂的行为。复杂的规则，就像许多国家的税法一样，导致愚蠢的行为。

现在显而易见的是用很少的人建造一项应用是一个挑战。但是如果你有一个正确的团队，挑战是值得的。有才能的人不会需要无尽的资源。他们会在约束限制 下的工作和利用创造力解决问题的挑战中成功。缺少人力意味着你会被迫更早的应对权衡——那是没问题的。这种情况会让你更早而不是更晚的指出你的重点。你也 能够与人交流，不用经常地担心他们不了解前因后果。

小公司享受着更少的形式主义，更少的官僚主义，和更多的自由。小公司天生和顾客更亲近。 那意味着他们可以以一种更加直接和人性化的方式和顾客沟通。如果你是小公司，你可以用熟悉的语言而不是晦涩的行话。你的网站和产品可以用一种人类的声音，而不是操着公司的腔调。小型意味着你可以和你的顾客在一起谈话，而不是居高临下的方式。小公司在内部的交流生同样有优势。你可以摈弃形式主义。所有事情都不再需要繁杂的流程和多重的签字确认。参与流程的人都可以开放和诚实的发言。这个没有被束缚的思想流是保持小型的巨大优势。

细节是在你使用的过程中才会显露出来的。只有在使用中你才能看到什么需要进一步关注。在使用中你才会感到缺了些什么。常常走路绊倒脚你才会清楚地上什么坑洼是需要填补的。那些是当你被迫要留意的时候才需要的细节，不是一想到细节就去搞定它。

别整天操心还没成型的麻烦。别过度开发一个产品。到适当的时候再添加硬件和系统软件。如果进度推迟了一两个星期，别担心，还没到世界末日。只要诚实: 解释给你的客户听，说你们正经历着成长的烦恼。他们也许不会因此无比感动，但他们起码会赞同你的坦诚。 关键是: 如果你已经掌握了你需要的信息就及时做决定。这样你就能把注意力集中到需要马上解决的问题上来。

顾客并不总是对的。现实中你要能分辨出谁是你该针对的顾客，谁是你该放弃的。庆幸的是，互联网使得发掘有共识的顾客的过程变得无比容易。 如果你想讨好每个人那么你什么人也讨好不了。

开始阶段，要把建造强有力的核心产品做为首要任务，不要过分执迷于需不需要服务器组和是否有能力调整规模应变。 先把一个伟大的产品推出，然后才去担心它无比成功了以后该怎么办的问题。 否则你可能只是把精力，时间和金钱花在一个永远不会发生的预期上。 信不信由你，最大的问题不是规模调适，而是怎样达到你不得不需要去调适的那一刻。

我们认为那都是扯淡。伟大的软件必须要有自己的理想。伟大的软件必定是有倾向的。当人们使用软件的时候他们不只是在看功能，同时他们也在寻找一个解决方案，一种理想。决定你的理想而后追求不懈。

不要约束人的习惯。而是令软件宽容的接纳每个人自己的解决方案。给人们足以通过自己的方式解决他们自己的问题的能力。然后解决之。把问题的根尽力处理好，然后走开。人们将会在你的总框架内找到自己的解决方案和约定。

但事实是,我们从来没有再去看它一遍。 我们已经知道下一步需要做什么,因为我们的客户在通过重复同样的需求不断提醒我们。 没有必要留一份名单或进行太多分析,因为这一切都在实时发生。 当每天都被不停地提醒时， 你不可能忘记什么是最重要的。

[创新]来自说不,否定一千件事情,以确保我们不步入歧途或是试图做得太多。我们总是在考虑进入新的市场,但是通过说不，可以让我们集中精力做那些真正很重要的事情。

只有一个真实的，可操作的软件才能拉近每个人对现实的理解和认同。避免了为一些草图和段落争得面红耳赤，最终发现这些都是无谓的。同时，你也会发现有些你想像中无关痛痒的事情事实上是很重要的。

与其停止在把一切都事先做好做对的思路上，不如在经反复求证得出的分析判读中前行。同时，你可以更快的推出一个积极的产品，因为你并不是一味追求一出门就完美的产品。结论是是由真实世界里的反馈，真实的目标来引导你的注意重心。

设置首选项是一种逃避困难抉择的方式 你不是运用你的专业去决定最佳的选择，相反地把问题留给了客户。表面看起来好像是你在帮客户的忙，事实上你只是会使他们更忙（客户自己已经是够忙的 了）。对客户而言，面对无穷无尽的设置选项是一个很令人头痛的问题，不是一件好事。客户不应该去烦恼细枝末节 — 当是你的责任的时候就不要让别人去担待。设置选项也是邪恶的因为他们使软件变得冗余。更多的选项就需要更多的编程代码。而且你还要花额外的时间在测试和设计上。还有很多选项排序和显示界面等你可能从来没见过的东西。这意味着隐藏的软件瑕疵：破碎的布局，凌乱的表格，奇奇怪怪的页面排序问题等等。

很多公司将设计，开发，广告撰写，支持和营销分隔成不同的战斗单位。虽然专业化有它的好处，但是它创作的环境却让员工只看到自己的小世界而不是web应用的整个背景。 尽你所能的，整合你的团队，这样才能有一个健康的，反复的讨论贯穿整个流程。建立一个制约平衡的系统。不要让事情在翻译中迷失。让广告撰写者和设计者一起工作。支持的疑问一定要让开发者看到。

初期后期都并不一定要壮大队伍。即使你接触过100个顶级人才，一口气把他们全招来也并不是什么好主意。没有办法能让这么多人迅速的融入到统一的企业文化中去。你将遭遇令人头痛的人员培训、性格不和、沟通不畅、发展方向不同等诸多麻烦。

而且每个人都需要能”在路上换档“。要记住小团队经常需要迅速改变前进方向。你需要有人能持续的调整和学习，而不是固步自封，只会干一件事。

寻找充满热情的人；寻找你信任他可以独立完成任务的人；寻找在发展缓慢的大公司受过折磨，并且渴望新环境的人；寻找为一起去建造你正在建造的东西而感到激动的人；寻找对你所厌恶的事物同样感到厌恶的人；寻找为入你的伙而感到兴奋不已的人。

如果你发现你确实需要来解释一个新的特征或概念,写一个简短的故事说明之. 别陷入技术或设计的细节,只讲一个短故事. 象你在正常的交谈时和一个人讲话的方式一样。 它并不需要成为一个短文。只要象记流水账似说明发生什么事。如果拿出你正在开发的屏幕作背景，来简述这个故事,那就更好了。

把你的产品想象成一个人。 你要赋予他什么个性类型？ 有礼貌？ 严肃的？ 慈悲的？ 精确的？ 有趣的？ 无表情的？ 认真的？ 自由的？ 你想它以怎样的面目示人，是偏执的 还是令人信服的？ 是作为一个万事通？ 抑或是谦逊并且人见人爱 ？ 一旦你确定下来，就要在构建产品的过程中时刻记得保持这些个性特征。利用这些个性指导拷贝写作，界面设计 和 功能项配置。 一旦你想要改变什么， 自问一下这会不会改变你的应用的个性特征。

不要勉强留住用户。如果他们要离开，就让他们带上在你网站创造出来的全部内容，然后自由离去。必须敞开粮仓，集中精力留住客户，所以他们愿意回来，而不是因为被门卡住了才不得不回来。

上线后不要停止写博客。 用一个专门的经常更新的博客，显示你的产品是充满活力的，（至少每周一次，如果可能应该时常更新） 。一个经常更新的产品博客是一个最好的网络应用正在积极发展的标志，，人们喜爱这个博客并且有人在家挑灯夜读。 被遗弃的产品博客是一个废弃产品的标志，人们会说，其负责人正趴在方向盘上睡觉。

等到要求改变的应激反应停止后再采取行动 当你在小船上摇晃，将会激起波浪。 当你引入一个新的功能，改变了一个政策，或删除了什么，应激膝跳反应，往往负面的，就会涌入。

要抵制恐慌情绪，和拒绝作出迅速改变的反应。 激情在开始时闪耀。 但如果你安然度过这最初的24-48小时，事情通常会平静下来。大多数人在向你反应之前，他们并没有认真的使用和挖掘你添加的功能（或习惯你已经删除的那些功能） 。所以你要坐稳，让这些反应都进来，并且在没有等待一段时间的情况下，别采取任何行动。 然后你可以采取一种更合理的反应。

还记得负面反应几乎总是高过正面的，而且更加充满激情。 事实上，你可能仅呢个听到负面声音，即使在大多数的用户对变化感到高兴的情况下。 请务必不要愚蠢到为了一个有争议的，但却必须要的决定，而作出后退的妥协。

每个人都能读书，每个人都能想到好点子，每个人都可以是网页设计师，每个人都会写博客，每个人都能够雇佣程序员写程序。 但您和其他人的差別在于您如何将他们变成现实。成功取决于伟大的执行力。

以软件來說，这就意味着很多事情要做得正确。您不能只有好的写作水平却无法实现文章中的承诺；干净的界面设计不能拯救糟糕的代码；一个优秀的软件要是沒有好的宣传，沒有人知道，仍然是不值分文的。如果要有所成就，就必须综合前述的所有元素。 其关键在于平衡能力。如果你向某一方面倾斜了，这就意味着你正走向失败。应该不断试着找出并且专注于最弱的一环，直到所有要素达到平衡。

创造一个成功的Web应用最重要的，也是值得我们再次强调的一点——参与其中的人。如果没有合适的人来实现，那么诸如印度教箴言、中心设计、更小的软件、以及其他精采的概念將没法发挥他们应有的作用。

你需要对工作有激情的人。这些人在乎他们的技术——他们真的会认为这是种艺术。这些人对他们的作品感到骄傲，而不关心所获得的报酬有多少。这些人会在细节上挥汗如雨，即使 95% 的人不知道这些细节间的差別在哪里。这些人想要创建伟大的作品并且不与劣质品妥协。这些人需要其他人，可能不止一个，但我们也很难不想多来上几个。总而言之，当你找到上面所述的这些人，留住他们。再怎么说，产品的成败——也是公司的成败——掌握在团队的成员手中。
