#+title: nolearn
- https://github.com/dnouri/nolearn
- https://github.com/Lasagne/Lasagne

nolearn的定位是，对已有的NN实现进行包装，提供和scikit-learn兼容的接口。从github repo下面看到的有下面这些实现：
- caffe # Caffe | Deep Learning Framework : http://caffe.berkeleyvision.org/
- decaf # [1310.1531] DeCAF: A Deep Convolutional Activation Feature for Generic Visual Recognition : http://arxiv.org/abs/1310.1531
- overfeat # code:start | CILVR Lab @ NYU : http://cilvr.nyu.edu/doku.php?id=code:start
- lasagne # https://github.com/Lasagne/Lasagne 基于theano的NN实现. 这个实现相对其他几个更经常和nolearn一起使用，而且这个实现也不太好单独使用。

似乎也没有什么特别好写的，有下面几个途径来学习：
- 这个 [[http://danielnouri.org/notes/2014/12/17/using-convolutional-neural-nets-to-detect-facial-keypoints-tutorial/][教程]] 是个不错的起点，针对kaggle一道"facial keypoints detection"比赛题目来手把手教你如何使用CNN.
- https://github.com/dnouri/nolearn/blob/master/nolearn/lasagne.py 阅读源代码了解它提供的接口，其实并不是特别困难
- 然后再看看 [[https://github.com/Lasagne/Lasagne][Lasagne]] 还提供了哪些其他特性，[[http://lasagne.readthedocs.org/en/latest/][文档]] 好像做得不是特别好

#note: 使用pip安装的nolearn或是lasagne可能会出现比较奇怪的问题，比较建议git clone然后本地编译。
