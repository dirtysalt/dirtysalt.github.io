#+title: Patterns in confusing explanations

https://jvns.ca/blog/confusing-explanations/

作者总结了各种容易让人非常困惑的解释我的模式。学习这些模式，一方面可以避免让自己沉浸本身就让人困惑的解释其中，另外一方面在向别人解释的时候可以避免这些问题。

1. pattern 1: making outdated assumptions about the audience’s knowledge 对读者的认知做出过时的假设，或者是写作时候的背景和现在阅读时候的背景有很大的变化，那么最好针对背景做些解释。
2. pattern 2: having inconsistent expectations of the reader’s knowledge  对读者的预期不一致：写给编程初学者的书，却认为递归是非常自然的东西。
3. pattern 3: strained analogies 牵强附会的比喻。通常比喻只能在某个点上做到近似，并且过多的比喻会造成失真，所以使用比喻可以但是不太太多。
4. pattern 4: fun illustrations on dry explanations 对枯燥的解释使用有趣的示例：我理解作者不是说不可以，但是过多的有趣示例容易让读者的注意力从原来的知识上挪开。不要为了有趣而有趣， 示例的目的还是为了解释事物。
5. pattern 5: unrealistic examples 使用不太现实的例子说明，读者通常会觉得非常别扭，而且需要花许多精力把理论映射到现实中。
6. pattern 6: jargon that doesn’t mean anything 不要使用黑话，黑话只是为了方便交流，并没有对事物做任何解释。
7. pattern 7: missing key information 缺少关键信息，只缘身在此山中。
8. pattern 8: introducing too many concepts at a time 一次引入太多概念，熟悉+意外才是最好的搭配。
9. pattern 9: starting out abstract 从具体的例子开始进行说明，而不是一开始上来就说抽象的东西。
10. pattern 10: unsupported statements 没有说服力的表述，没有办法说服读者（或者说让读者印象深刻，缺乏逻辑性）
11. pattern 11: no examples 不使用例子
12. pattern 12: explaining the “wrong” way to do something without saying it’s wrong 使用错误的例子却忘记强调这个是错误的。如果读者忽略某些部分的话，很容易认为错误的例子是正确的。
13. pattern 13: “what” without “why” 填鸭式的表述，而不给出任何解释。
