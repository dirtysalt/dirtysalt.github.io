#+title: 网络文章@202509

-------------

https://weibo.com/5712857005/Q5QLI75iu

上周韩国的一个朋友出差来香港，他是做展会的，有一个市值不小的公司，45岁了，也算钻石王老五了，我请他吃饭的时候就跟他聊到了韩国生育率这么低的问题。

他告诉我，在20年前的时候，也就是他25岁，那时候韩国GDP处于高增速，为什么会高增速呢？因为韩国普通人家的孩子不下班，也不睡觉。天天在会社(公司)里加班加点往死里搞，他知道我们中国人有一个词叫做996，现在在推特上很流行的，他们韩国普通人看看只能苦笑不说话，因为他们非常同情我们这个时代的年轻人。

他告诉我，因为他们行业的特殊性(他最初是学食品的)所以大学同学要经常打交道以此维系关系，他就知道自己的大学同学有两个在加班中猝死的，一个班四十个人，这个比例可不低。
他同学的葬礼是请假去的，韩国的葬礼跟我们中国人类似，要吃东西的，有酒，同学们围坐了一桌，刚开始喝的还挺畅快，结果到后来在人家葬礼上喝醉了，大家哭闹成了一团，丢尽了人，后来去唱K打起来了，最终不欢而散。

过去的韩国是一个威权主义国家，非常重视爱国教育，ZF会告诉韩国年轻人，你们的努力就是为了报效祖国，将每一台韩国国产车(现代，起亚)卖出，就能为民族复兴做出贡献。韩国车也确实在2005年到2014年期间卖的非常好，甚至在很多地区超过了丰田，但是懂的人都知道，这是韩国打价格战的结果。怎么打？

雇佣一个一天能工作12个小时，每周工作六到七天的工人只要欧美工人十分之一的价格，雇主不赚造车成本的钱，只赚工人省下的钱，可笑的是当时这些拼命的工人手指被机器切断了只要赔20万韩元(1100元人民币)，这不吊打竞争对手？都是拿命换的经济增长。

当时看来别的副作用到是没有，只是生育率暴跌了。

韩国的爱国专家们在电视台也说呀，这年轻人不生育，都是因为生活方式的转变，要不就是教育的结果，但就是很少有专家说不是年轻人不想生，而是没法生。偶尔有两个专家提出来，就被打上了不爱国的标签。别看现在韩国年轻人对爱不爱国无所谓，那时候大家都是很热烈的，慢慢的也就没人说了。

后来，故事的转折很突然，年轻人不生，老年人也不再催年轻人生了，因为韩国只有那么点大，工人们在首尔打工，回家也不难，看到累成狗回家的孩子也心疼，便不再说出想抱孙子的想法。

还有那永远买不起的房子，首尔的房价其实没有大家说的那么夸张，但即便并不夸张也没有公摊面积的房子，都压的韩国年轻人喘不过气来。被父母逼着生孩子的年轻人租着别人的房子，妻子大肚子了有几个月没工作，交房租都很心疼，出租房，地下室里带着孩子，过着毫无希望的日子。

我这个朋友他觉得自己最幸运的事情就是没结婚，没孩子，所以没有负担，换了十多个行业才有了自己的资产。第一桶金居然是在首尔混不下去了，到韩国南部的小镇弄了两条捕虾船把虾倒卖到首尔换来的。

到现在你看不到韩国年轻人给你玩命做事的了，大家都是今朝有酒今朝醉，因为他们父母的人生告诉他们，如果信了韩国ZF的鬼话，大概率这辈子再无出头之日。到了2010年的时候，韩国的人均GDP迈入2万美金，就有大量的中产阶层以上的父母把孩子送到国外，而大部分富人直接下场到海外生孩子。对于中产，恶性竞争和无休止的加班已经让这些家长们对韩国彻底失望。对于富人，如果阶层下滑，自己是怎么对待穷人家的孩子，他们自己不知道？出于惧怕，也不能让孩子出生在这儿。

到今日，你可以看到除首尔之外，其他的过去繁华的城市晚上都跟闹鬼一样，根本看不到年轻人。当地ZF不得不给商贩发钱，韩国现在很多店的老板都是北方的朝鲜族人，即便店里完全没生意，也会领到足够开门大吉的补贴，以防城市彻底衰亡。

对于韩国老百姓来讲，他们也没预想到曾经辛苦奋斗了大半辈子的城市居然完全没有了生气，年轻人中，越南人，印度人，黑人的比例越来越高。再过十年，很多城市被越南和其他地方年轻人占有的可能性是不小的。因为除此之外，根本无法找到劳动力，工地开工全是北边来的朝鲜族和越南人。而曾经奋斗半生差点丢了小命的韩国老百姓对此毫无发言权。有的韩国老头找了越南小媳妇，最后资产归了她们，但这可能是唯一的福利。

韩国普通人，在工业现代化的道路上，只是齿轮上的发条，不停的旋转，用坏了，换一条。没有资格上桌吃饭，桌上吃剩的，丢下的骨头还要抢。生了条小发条，他/她就有好日子过？耗材罢了，分骨头的机会大一点，多一些。仅此而已。。

------------
https://weibo.com/1706699904/PAIKIrFDI

被卡马克推荐的编程和机器学习建议：《My Advice for Programming and ML》，作者Joseph Suárez，链接：x.com/jsuarez5341/status/1943692968013025457

编程 10 大建议：

1、通过实践学习。从耗时几小时的项目开始，逐步挑战需要数天完成的任务。简单的游戏是绝佳选择，因为你能快速获得大多数问题的可视化反馈。我推荐使用 raylib 进行渲染——它轻量级、支持几乎所有语言，且该库本身就是优秀软件设计的典范。

2、从 Python 开始。很多资深开发者讨厌 Python，我有时也讨厌它。但无论如何你都应该从 Python 入手，因为它能让你比几乎任何其他语言更快起步。你遇到的大多数 AI 项目至少表层代码都是用 Python 写的。不过别在 Python 上停留太久——语言的设计会引导你以特定方式思考问题。避免使用复杂的外部包、继承、装饰器，以及任何会让你偏离学习用赋值、条件、迭代和函数来表达逻辑的东西。写几个基础游戏、应用程序或工具后就转向其他语言。包管理推荐使用 uv。

3、尽早学习 C 语言。C 是一门非常适合编写高性能软件的极简语言。我之所以不建议初学者先学 C，唯一原因是它要求你同时理解计算机和操作系统的工作原理，这对新手来说信息量过大。你需要掌握的核心概念包括：数据类型、类型转换、结构体、（单遍）编译、链接、内存分配、栈与堆的区别、指针。现阶段请避开 C++，它只是在 C 语言基础上堆砌了大量你暂时用不着的复杂功能。

4、警惕过度抽象。始终以最简单的方式解决眼前问题为目标。除非能百分百确定未来会出现某种情况，否则不要为了追求通用性而增加复杂度。即便真有这种需求，通常也等真正遇到时再解决更明智。C 语言在这方面表现优异，因为它移除了继承体系和臃肿第三方库这类诱人但事与愿违的工具。

5、使用 Git。这一点基础到我差点忘了提。默认在 GitHub 上创建新项目并频繁提交。这是避免工作丢失的最佳方式，还能为那些"明明之前能用"的代码提供版本回溯。~所有开源项目都通过 GitHub 运作。

6、善用调试器。调试器能让你逐行执行代码并检查局部变量值，比到处塞 print 语句高效灵活得多，还能快速跳转检查。Python 用 pdb，C 语言用 gdb 就够。写 C 语言务必搭配地址消毒器(Address Sanitizer)，它能提供可读的错误提示——重要到我建议没有它就别碰 C 语言。

7、掌握基础 Unix 工具。尽快熟悉命令行操作，不必追求花哨。像 ls、pwd、cat、head、mv、cp、cd、mkdir、top 等基础命令就能满足 90%的日常需求，最常用的工具不超过 10 个。条件允许尽量用原生 Linux 系统，MacOS 尚可，Windows 则不建议——若不想双系统就装 WSL。推荐安装基础版 Ubuntu，别过度折腾系统定制。熟悉发行版的包管理工具（很可能是 apt），别用 snap。

8、警惕技术陷阱。程序员总爱发明些让事情更糟的"聪明"办法来浪费你时间。新手尤其要避开：面向对象和函数式编程（都是教条）、测试驱动开发（少量测试无妨）、频繁更换语言和发行版、行业"最佳实践"（FAANG 里蹩脚工程师多的是）、Python 类型提示系统、C 语言的 make/cmake、Hydra 这类复杂配置解析器、GitHub 子模块和花哨的 CI、React 等现代前端框架（学基础 HTML+CSS 就够了）、系统美化、X 上最新的编程潮流，以及我在开发直播里吐槽过的一切。

9、不要为了学习而刷 LeetCode。虽然这对求职面试可能是种必要的妥协，但用巧妙算法解决刁钻问题并不能代表编程的全貌。你当然应该学习基础数据结构和算法，但相比构建更多项目，掌握十种动态编程变体在面试之外的作用有限。我已多年未参加编程面试，但我确信 18 岁的我会比 28 岁的我表现更好——而 28 岁的我在其他所有方面都更出色。

10、不必过度纠结 IDE 选择。这真的没那么重要。我只用带两个插件的 NeoVim，它轻量且不碍事。是的，我用过无数 IDE；不，这根本不重要。VSCode 就不错，但请坚持通过终端运行代码而非依赖项目配置和按钮。这会打破"IDE 是神奇必需品"的幻觉。别用 AI 优先的编辑器。当你掌握了基础后，像 Copilot 或 SuperMaven 这类代码补全工具无妨，但请仅用于节省打字和文档查阅时间——而非替代思考。

---

机器学习入门

成为一名高效的研究者实际上比成为一名优秀的程序员更容易。大多数研究者的编程水平都很糟糕。优秀的程序员比糟糕的程序员更容易成为优秀的研究者。

与通用编程不同，机器学习领域的可用资源其实相当优质。斯坦福大学的 CS231n 课程可免费在线观看。重点看 Andrej Karpathy 或 Justin Johnson 讲授的部分。更重要的是——必须完成配套习题。听着，我通常不喜欢大多数课程，但这个确实很好。它的设计能让你轻松掌握知识而不必过度挣扎。你只需要知道偏导数是什么、矩阵是什么就够了。就算没见过矩阵表达式的求导也不用担心——这和单变量求导完全一样，只是有时需要对矩阵进行转置。真的就这么简单。

完成 CS231n 课程后，你将理解 autograd 的工作原理（因为你亲手实现过它）并熟练使用 PyTorch（因为你已经用它构建过项目）。恭喜，你已经学完了所有实用课程内容。下一步就是开始阅读 ArXiv 上的学术论文。对 AI 某个特定领域感兴趣？搜索该领域最重要的论文清单并研读它们。起初这会让你应接不暇，但随着时间推移会逐渐变得轻松。我在上方主文中已为你准备了强化学习领域的论文清单。我最重要的通用建议都围绕着理解科学过程的局限性展开。我的措辞都是经过深思熟虑的。请定期重读这三个段落，直到你自己领悟到它们的真谛。

1、了解科学研究的运作方式。如果不理解论文撰写时的背景环境，你就无法真正读懂论文。大多数会议强制要求 8-9 页的篇幅限制。由于 arXiv 上的论文大多已发表或计划发表，你会发现它们也遵循 8-9 页的规范。为什么连简单概念也不写得更短？因为这个页数既是上限也是下限——提交 6 页论文通常会被拒稿。为什么大量论文充斥着无关紧要的公式化数学表达？因为审稿人偏爱公式（也有些研究者单纯喜欢写公式）。为什么论文缺少某个明显的消融实验或对照组？因为撰写论文的超负荷研究生耗尽了时间和 GPU 资源（主要是 GPU）。为什么 X 领域的研究论文如此稀少？因为审稿人不喜欢这类课题。对了，还有大量论文本身就是错误的，所以当两篇论文结论直接矛盾时——它们很可能确实互相矛盾！

2、不要迷信权威。我的观点是否值得关注，应该基于我实际构建的成果来判断。我之所以提及学术头衔，只是因为很多人仍看重这些标签——正因如此，我更有资格告诉你：不要默认相信 X 会议或 Y 大学的论文。这些顶多算是弱信号，我曾耗费精力复现过某些本应更严谨的研究者发表的虚假结果，深受其害。虽然较少见，但确实有人为发表论文而直接造假。更常见的情况是，实验室里连续六个月的超负荷工作导致了实验数据噪声和研究者的一厢情愿。判断研究可靠性的最佳指标是开源代码、多次独立复现以及在后续工作中的实际应用——即便如此，这个信号仍不完美，我在这方面也栽过跟头。复现论文结果是绝佳的学习方式，但要明白这可能耗时数月。不过在学习新领域时，你绝对应该动手实现一些基础性论文！

3、寻找错误。默认出版物存在错误，找出其中的隐患。实验设计是否控制不当？基线是否过于薄弱？提供的推理是否是结果的唯一合理解释？努力将论文内容与其通常过度复杂的表述分离开来。在论文正确的前提下，它如何与相关研究相契合？建立直觉需要验证主张和模式匹配相结合。你可以将其视为评估某个方向或方法是否值得投入时间的概率。当某个领域的所有论文都犯同样错误时，最大机遇就会出现。这种情况通常发生在某个主题的前提或标准评估存在根本缺陷时。杰出的研究者能穿透集体短视的面纱，开辟新方向。


----------

https://weibo.com/1347411011/PzhItac2X

如有一天派出所给你打电话，叫你过去一趟，你真的油门一踩就乖乖过去了，你可真的太天真，就算你什么都没有干过，要先沉重气。怎么回话，我肯定配合执法，不过现在有事不太方便，麻烦您能不能先告诉我什么事，什么原因？
他们会随随便便的说一句，来了你就知道了。
那么好，我告诉你，法律明白白，治安管理处罚法第 82 条，公安机关传案行为人接受调查，得事先告知原因和依据
你得跟对方讲，按法律程序传案应事先告知我原因和法律依据。麻烦您还是先说明一下，我确认清楚才能更好地配合工作。
不要小看这几句话，能帮你挡住很多不清不楚的危险。你看有多少人就是接到电话之后就认怂，结果就稀里糊涂的签字画押了，最后被当成嫌疑人立案了。配合执法是义务，守住法律程序，保护好自己更是权利。


------

很多父母犯了严重的教育事务，不是因为第一次当父母缺乏经验，而是因为第一次品尝到了权利的滋味，于是都不知道怎么当人了。


[[../images/Pasted-Image-20250915195317.png]]


------

https://weibo.com/1347411011/PzhItac2X

如有一天派出所给你打电话，叫你过去一趟，你真的油门一踩就乖乖过去了，你可真的太天真，就算你什么都没有干过，要先沉重气。怎么回话，我肯定配合执法，不过现在有事不太方便，麻烦您能不能先告诉我什么事，什么原因？

他们会随随便便的说一句，来了你就知道了。

那么好，我告诉你，法律明白白，治安管理处罚法第 82 条，公安机关传案行为人接受调查，得事先告知原因和依据

你得跟对方讲，按法律程序传案应事先告知我原因和法律依据。麻烦您还是先说明一下，我确认清楚才能更好地配合工作。

不要小看这几句话，能帮你挡住很多不清不楚的危险。你看有多少人就是接到电话之后就认怂，结果就稀里糊涂的签字画押了，最后被当成嫌疑人立案了。配合执法是义务，守住法律程序，保护好自己更是权利。


----------

https://weibo.com/1429400312/PAlSjCzky

昨天有一个帖子转发不出来了，在这里重发一遍。
有必要对体制内工作的年轻小朋友们再强调一下，走正道才是最好的。很多人希望替领导背锅然后上位的想法是完全错误的，千万别上这个当。

首先就是我昨天说的，你背锅之后领导翻脸不认人的概率是极大的，而你却毫无办法；或者是领导后来自身难保，也不能给你兑现，这是极有可能的。

其次要熟悉上位的逻辑，越厉害的大领导要罩的人越多，要平衡的关系也越多，所以很多时候你以为你是大领导的嫡系，会得到栽培，但大领导往往是桥牌高手，把所有人都看成是为了赢而能够随时被扔出去的牌，你现在被养着，只是为了在关键时刻被扔出去。

更重要的是，你就算上位了，也得靠硬核技能才能坐稳。对群众的关心爱护，对下属的鞭策激励，对同级的博弈合作，对上级的资源争取，都是需要干出来的。你给上任领导背的锅，也许是你上位的军功章，但如果没有关键成绩做后盾，你这个锅就马上变成大炸雷，会让你把一切都还回去。

所以走正道才是最好的。让人民群众满意，让工作流畅运转，才是最好的。

----------

