#+title: 网络文章@202307


-----

[[https://www.youtube.com/watch?v=x6tMLAjPVyo&list=WL&index=1][(22) The 2 Most Important Skills For the Rest Of Your Life | Yuval Noah Harari on Impact Theory - YouTube]](https://www.youtube.com/watch?v=x6tMLAjPVyo&list=WL&index=1)

Emotional Intelligence & Mental balance

未来技术发展会不断加速，在不同阶段需要不同的角色，人们为了适应社会需要不断地适应这些角色。在这个过程中，需要不断地学习不同的知识，如何保持自己的感情理智以及精神平衡非常重要。

-----

[[https://mp.weixin.qq.com/s/9_lSIFSw5o8sFC8foEtA7w][Presto在B站的实践]](https://mp.weixin.qq.com/s/9_lSIFSw5o8sFC8foEtA7w)

相对Hive、Spark引擎，Presto存在不少优势：
1. shuffle数据不落地
2. 流式任务执行而不是按stage级别执行
3. split为线程级别的调度
4. 数据源插件化

这使Presto 特别适合交互式跨源数据查询，Presto也并不是完美的，比如因为其流式pipeline执行方式的设计，使其丧失了task级别的recovery机制，所以Presto目前不是特别适合用来做大规模的ETL查询，当然目前社区也在通过对presto进行各种优化来使其适应更大规模的查询，比如Presto Ulimited和Presto on Spark项目。

-----

[[https://blog.samaltman.com/productivity][Productivity - Sam Altman --- 生产力 - Sam Altman]](https://blog.samaltman.com/productivity)

The most impressive people I know have strong beliefs about the world, which is rare in the general population.  If you find yourself always agreeing with whomever you last spoke with, that’s bad.  You will of course be wrong sometimes, but develop the confidence to stick with your convictions.  It will let you be courageous when you’re right about something important that most people don’t see.

我认识的最令人印象深刻的人对世界都有坚定的信念，这在普通人群中是罕见的。如果你发现自己总是同意上次谈话的人的观点，那就糟糕了。当然，有时你会犯错，但要培养坚持自己信念的信心。当你对大多数人看不到的重要事情做出正确的判断时，它会让你变得勇敢。


I’ve learned that I can’t be very productive working on things I don’t care about or don’t like.  So I just try not to put myself in a position where I have to do them (by delegating, avoiding, or something else).  Stuff that you don’t like is a painful drag on morale and momentum.

我了解到，我无法在自己不关心或不喜欢的事情上高效工作。所以我只是尽量不让自己处于必须做这些事情的境地（通过委派、回避或其他方式）。你不喜欢的事情会严重影响士气和动力。

By the way, here is an important lesson about delegation: remember that everyone else is also most productive when they’re doing what they like, and do what you’d want other people to do for you—try to figure out who likes (and is good at) doing what, and delegate that way.

顺便说一句，这是关于授权的一个重要教训：请记住，其他人在做自己喜欢做的事情时也是最有生产力的，并且做你希望其他人为你做的事情 - 尝试找出谁喜欢（并擅长）做什么，并以这种方式委派。

Doing great work usually requires colleagues of some sort.  Try to be around smart, productive, happy, and positive people that don’t belittle your ambitions.  I love being around people who push me and inspire me to be better.  To the degree you able to, avoid the opposite kind of people—the cost of letting them take up your mental cycles is horrific.

出色的工作通常需要某种同事。尝试与聪明、高效、快乐、积极的人在一起，他们不会贬低你的抱负。我喜欢和那些推动我、激励我变得更好的人在一起。在你能做到的范围内，避开相反类型的人——让他们占据你的心理周期的代价是可怕的。

You have to both pick the right problem and do the work.  There aren’t many shortcuts.  If you’re going to do something really important, you are very likely going to work both smart and hard.  The biggest prizes are heavily competed for.  This isn’t true in every field (there are great mathematicians who never spend that many hours a week working) but it is in most.

你必须选择正确的问题并完成工作。没有太多捷径。如果你要做一些真正重要的事情，你很可能会既聪明又努力地工作。最高奖项的争夺十分激烈。并非在每个领域都是如此（有些伟大的数学家从来不会每周花那么多时间工作），但在大多数领域都是如此。

Don’t neglect your family and friends for the sake of productivity—that’s a very stupid tradeoff (and very likely a net productivity loss, because you’ll be less happy).  Don’t neglect doing things you love or that clear your head either.

不要为了生产力而忽视你的家人和朋友——这是一个非常愚蠢的权衡（而且很可能是净生产力损失，因为你会不那么快乐）。不要忽视做你喜欢做的事情或者让你头脑清醒的事情。

Finally, to repeat one more time: productivity in the wrong direction isn’t worth anything at all.  Think more about what to work on.

最后，再重复一遍：方向错误的生产力根本没有任何价值。多考虑一下要做什么工作。

-----


[[https://blog.samaltman.com/hard-startups][Hard Startups - Sam Altman --- 艰难的创业公司——山姆·奥尔特曼]](https://blog.samaltman.com/hard-startups)

Easy startups are easy to start but hard to make successful.  The most precious commodity in the startup ecosystem right now is talented people, and for the most part talented people want to work on something they find meaningful.

简单的创业公司起步容易，但成功却很难。目前创业生态系统中最宝贵的商品是人才，而大多数人才都希望从事他们认为有意义的事情。

Few recruiting messages are as powerful (when true) as “the world needs this, it won’t happen any time soon if we don’t do it, and we are much less likely to succeed if you don’t join.”

很少有招聘信息像“世界需要这个，如果我们不这样做，它不会很快发生，如果你不加入，我们成功的可能性就会大大降低”这样强大（如果是真的）。

An easy startup is a headwind; a hard startup is a tailwind.  If people care about your success because you seem committed to doing something significant, it’s a background force helping you with hiring, advice, partnerships, fundraising, etc.

轻松的创业是逆风；艰难的启动是顺风顺水。如果人们关心你的成功是因为你似乎致力于做一些重要的事情，那么这是一种背景力量在招聘、建议、合作、筹款等方面帮助你。

Part of the magic of Silicon Valley is that people default to taking you seriously if you’re willing to be serious—they’ve learned it’s a very expensive mistake, in aggregate, not to.  If you want to start a company working on a better way to build homes, gene editing, artificial general intelligence, a new education system, or carbon sequestration, you may actually be able to get it funded, even if you don’t have a degree or much experience.

硅谷的神奇之处在于，如果你愿意认真对待，人们就会默认认真对待你——他们已经知道，如果你不认真对待，那么总的来说，这是一个非常昂贵的错误。如果你想创办一家公司，致力于以更好的方式建造房屋、基因编辑、通用人工智能、新的教育体系或碳封存，你实际上可能能够获得资金，即使你没有资金学位或丰富的经验。


-----

[[https://blog.samaltman.com/idea-generation][Idea Generation - Sam Altman --- 创意生成 - 山姆·奥尔特曼]](https://blog.samaltman.com/idea-generation)

It’s important to be in the right kind of environment, and around the right kind of people. You want to be around people who have a good feel for the future, will entertain improbable plans, are optimistic, are smart in a creative way, and have a very high idea flux. These sorts of people tend to think without the constraints most people have, not have a lot of filters, and not care too much what other people think.

处于合适的环境中，周围有合适的人，这一点很重要。你希望周围的人对未来有良好的预感，会考虑不可能的计划，乐观，聪明，有创造力，并且有非常高的想法流动。这类人的思维往往不受大多数人的限制，没有太多的过滤器，也不太关心别人的想法。

The best ideas are fragile; most people don’t even start talking about them at all because they sound silly. Perhaps most of all, you want to be around people who don’t make you feel stupid for mentioning a bad idea, and who certainly never feel stupid for doing so themselves.

最好的想法都是脆弱的；大多数人甚至根本不会开始谈论它们，因为它们听起来很愚蠢。也许最重要的是，你希望周围的人不会因为提到坏主意而让你觉得自己很愚蠢，而且他们自己也绝对不会因为自己这样做而感到愚蠢。

-----

[[https://blog.samaltman.com/pg-and-jessica][PG and Jessica - Sam Altman --- PG 和杰西卡 - 山姆·奥尔特曼]](https://blog.samaltman.com/pg-and-jessica)

What did they do? They took bets on unknown people and believed in them more than anyone had before. They set strong norms and fought back hard against bad behavior towards YC founders. They trusted their own convictions, were willing to do things their way, and were willing to be disliked by the existing power structures. They focused on the most important things, they worked hard, and they spent a huge amount of time 1:1 with people. They understood the value of community and long-term orientation. When YC was very small, it felt like a family.

他们做了什么？他们把赌注押在了未知的人身上，并且比以前任何人都更加相信他们。他们制定了强有力的规范，并严厉反击针对 YC 创始人的不良行为。他们相信自己的信念，愿意按照自己的方式做事，并且愿意被现有的权力结构所讨厌。他们专注于最重要的事情，他们努力工作，并且花费了大量的时间与人们进行一对一的交流。他们了解社区的价值和长期定位。当 YC 很小的时候，感觉就像一个家庭。


-----

[[https://blog.samaltman.com/the-strength-of-being-misunderstood][The Strength of Being Misunderstood - Sam Altman --- 被误解的力量——萨姆·奥尔特曼]](https://blog.samaltman.com/the-strength-of-being-misunderstood)

The most impressive people I know care a lot about what people think, even people whose opinions they really shouldn’t value (a surprising numbers of them do something like keeping a folder of screenshots of tweets from haters). But what makes them unusual is that they generally care about other people’s opinions on a very long time horizon—as long as the history books get it right, they take some pride in letting the newspapers get it wrong.

我认识的最令人印象深刻的人非常关心人们的想法，甚至是那些他们确实不应该重视的人的想法（其中令人惊讶的数量会做一些事情，比如保留仇恨者推文屏幕截图的文件夹）。但他们的不同寻常之处在于，他们通常会在很长一段时间内关心别人的观点——只要历史书上的观点是正确的，他们就会为报纸上的错误而感到自豪。

You should trade being short-term low-status for being long-term high-status, which most people seem unwilling to do. A common way this happens is by eventually being right about an important but deeply non-consensus bet. But there are lots of other ways–the key observation is that as long as you are right, being misunderstood by most people is a strength not a weakness. You and a small group of rebels get the space to solve an important problem that might otherwise not get solved.

你应该放弃短期的低地位，换取长期的高地位，但大多数人似乎不愿意这样做。发生这种情况的一种常见方式是最终对一个重要但非共识的赌注做出正确的判断。但还有很多其他方法——关键的观察是，只要你是对的，被大多数人误解就是一种优势而不是劣势。你和一小群反叛者获得了解决一个重要问题的空间，否则这个问题可能无法解决。

-----

[[https://www.youtube.com/watch?v=Mde2q7GFCrw][Yuval Noah Harari: Human Nature, Intelligence, Power, and Conspiracies | Lex Fridman Podcast #390 - YouTube]](https://www.youtube.com/watch?v=Mde2q7GFCrw)

感觉赫拉利思想还是深刻的。里面谈到了智能和意识，痛苦, 希特勒，警惕对纳粹和法西斯主义的痛恨（痛恨意味着自己的优越性）

人类合作的基础是基于故事，小说，和想象力，都是虚构出来的东西。这也是为什么good story teller这么重要，智人比其他种类更早进化就是这个原因，现代更是如此。金钱和宗教是人类历史上两个最大最成功的故事。

历史的发展都是由许多随机的小事情偏离导致的，我们可以解释，但是我们没有办法预测。

共产主义和法西斯主义非常类似，法西斯主义强调国家利益， 共产主义强调阶级利益(proletariat). 个人是没有自由的，所有的东西（艺术，真理，道德）都是为了国家和阶级利益服务的。

自由主义是他们的对立面。自由主义认为人会犯错误(falliable), 所以需要各种制衡(check-and-balance). 而在共产和法西斯主义里面，阶级和国家是永远不会犯错误的(infalliable), 不需要任何制衡手段。

In politics, all problems have solutions, if you have motivations. 政治问题上，只要有动机，任何问题都可以解决。we can not compromise on eternity or god. 巴勒斯坦和以色列无法在永恒和上帝这个问题上妥协，他们之间没有动机，所以没有办法解决冲突。

**GPT写出的东西看上去非常连贯(coherent)并且令人信服，但是却经常搞错事实。赫拉利说，这正是几千年来政治和宗教的秘密：)**

Our best qualities are non-verbal. Again, they come from things like compassion, from introspection, and introspection from my experience is not verbal. If you try to understand yourself with words, you will never succeed. There is a place where you need the words, but the deepest insights, they don't come from words. And you can't write about it. But that's, again, it goes back to Wittgenstein, to Buddha, to so many of these sages before, that these are the things we are silent about. - Yeah. But eventually you have to project it, as a writer, you have to do the silent introspection, but projected onto a page. - Yes. But you still have to warn people. You will never find the deepest truth in a book.

让问题引导自己到要去的地方，而不是自己想要它去的地方，否则会有先入为主的观念，带来认知上的偏差。

the way to peace is through boredom.

That what life is. If you ask what is the meaning of life in a more kind of philosophical or spiritual question, the real question to ask what kind of answer do you expect? Most people expect a story. And that's always the wrong answer. Most people expect that the answer to the question that what is the meaning of life will be a story, like a big drama, that this is the plot line and this is your role in the story. This is what you have to do. This is your line in the big play. You say your line, you do your thing... That's the story. And this is human imagination. This is fantasy. To really understand life, life is not a story. The universe does not function like a story. So I think to really understand life, you need to observe it directly in a nonverbal way. Don't turn it into a story. And the question to start with is what is suffering? What is causing suffering? You know, the question, what is the meaning of life? It'll take you to fantasies and delusions. We want to stay with the reality of life. And the most important question about the reality of life is what is suffering and where is it coming from? （生活的意义并不是一个故事，是去感受事物，感受自己。第一个问题就是，感受痛苦，痛苦从哪里来？不要用语言去解释，否则又在创造一个故事）

听听他的英文发音，就觉得英文发音完全不是问题，关键是你懂什么东西，你是否可以很好地表达出来。

ps: 感觉他说话的方式非常吸引人，有点想C罗的说法方式。

-----

[[https://mp.weixin.qq.com/s/7YXSO3n7Y-SgZxgcpbQtoQ][黄东旭：我对数据库如何Serverless 化的一些思考]](https://mp.weixin.qq.com/s/7YXSO3n7Y-SgZxgcpbQtoQ)

对于关系型数据库市场来说，OLTP 仍然是主流， **OLAP 最重要的是弹性和低成本（其实并非性能）。另外一个容易被忽略的场景是轻量的 data transformation（一个好的例子是 dbt），频繁在不同的数据服务商之间移动数据并不是好体验。** 大量冷数据、少量热数据，但是常常没有办法很清楚地划分冷热边界（就像你不能突然阻止我在 3 年前的朋友圈上回复某个对话一样）。

在云上，一切资源都是需要付费的，而且不同的服务定价差别巨大，对比一下 S3 / RDS / DynamoDB 的定价即可看到很大的区别，而且相比服务费用和存储成本， **大家很容易忽略流量的费用（有时候你看账单会发现其实比起存储成本，流量会是更大的开销）。节省成本有几个关键：**
- 利用 S3 进行跨 AZ 的数据移动和共享，节省跨 AZ 流量费用。
- 利用 Spot Instances ，进行离线任务。离线任务定义：无状态（持久化在 S3 上）、可重入。典型的离线任务是 LSM-Tree 的 compaction 或者备份恢复什么的。

-----

[[https://www.youtube.com/watch?v=qCn3WRG36Sc][聊聊英国首富 ｜Dyson的故事 - YouTube]](https://www.youtube.com/watch?v=qCn3WRG36Sc)

也是一个能折腾的首富，关键是啥事情都自己掏钱，信念非常非常强。

-----

[[https://www.youtube.com/watch?v=J-RzMenh1Qg][公視演講廳：讓改變看得見 張忠謀 - YouTube]](https://www.youtube.com/watch?v=J-RzMenh1Qg)

全才教育和通识教育有很大的不同：
- 通识教育是你对什么有兴趣，那就去学习，不要求你成为未来某方面的领导人
- 全才教育在通识教育上有所限制。他在南开中学的时候，就每天被提醒将来要成为领导人，美国 harvard 也同样如此。

在MIT学习的是机械工程，但是在未来这些知识一点都没有用上。反倒是平时学习的东西，对世界的了解，对世界的观察，如何做人做事，对自己未来的帮助比较大些。

-----

[[https://www.youtube.com/watch?v=Xn1EsFe7snQ][Jen-Hsun Huang: Stanford student and Entrepreneur, co-founder and CEO of NVIDIA - YouTube]](https://www.youtube.com/watch?v=Xn1EsFe7snQ)

黄仁勋早起在斯坦福的演讲，现在来看还是很有启发的：
- 创业者需要vision 和 perspective, 但是每个人的观点不同（创业者和投资者），有时候你需要坚持自己的。
- 关于 innovation, 自己很容易回陷入到路径依赖上，这个 jim keller 也说过，芯片这个东西为了效率，每隔 5-10 年就需要重来一遍。
- 在市场领域，general purpose market 通常被认为比较危险，因为在那个地方你可能什么都做不好，niche market更加稳健有利可图。有句俚语"jack of all trades, master of none"
- 在最后面他还提到，创业（或者说不管做什么事情）都需要不断地 focus，这个也和目前资本主义社会下要求的精细化分工有关系。

"Jack of all trades, master of none" 是一个常见的英语俚语，意思是指某人多才多艺，但没有特别突出的专长或者技能。这个短语经常用来形容那些能够应付多种各样的任务，但是没有在某一个领域或者技能上达到高超水平的人。

-----

[[https://www.youtube.com/watch?v=2GhO9x-mPjo][如何看待哈佛招生案的审判，如何看待教育平权？｜哈佛大学｜种族｜非洲裔｜亚裔｜平权法案｜公平｜王局拍案20230705 - YouTube]](https://www.youtube.com/watch?v=2GhO9x-mPjo)

高等教育还需要考虑到对社会流动性的影响，使用分数来设定标准并不一定意味公平。

-----

[[https://justinjaffray.com/understanding-cost-models/][Understanding Cost Models --- 了解成本模型]](https://justinjaffray.com/understanding-cost-models/)

成本模型可能是一个非连续的区间，非连续的区间意味着需要精准的估计，否则得到的就不会是最好的计划。

When I first learned that Oracle allows users to revert the behaviour of their query planner to ~any earlier version I was horrified. Shouldn’t we, as implementors, be striving to always make things better? I really saw this as throwing in the towel: an admission that none of us really have any idea what we’re doing here. In the time since then my opinion has shifted pretty substantially. When I learned that Spanner recently adopted this methodology as well, my reaction was “yup, makes sense.” With some time away to reflect on it, were I still at Cockroach Labs I think I’d be pushing for that same change to be made in CockroachDB in the near future*.

当我第一次得知 Oracle 允许用户将其查询规划器的行为恢复到任何早期版本时，我感到震惊。作为实施者，我们难道不应该努力让事情变得更好吗？我真的认为这是认输：承认我们没有人真正知道我们在这里做什么。从那时起，我的观点发生了很大的变化。当我得知 Spanner 最近也采用了这种方法时，我的反应是“是的，有道理”。如果我还有时间思考一下，如果我还在 Cockroach Labs，我想我会在不久的将来推动 CockroachDB 做出同样的改变*。

The reason for the shift in my mindset is twofold. 我的心态转变的原因有两个。

First, I think I’m starting to fully grasp the complexity we’re wrangling here. It’s easy to argue that we could build a simpler cost model that doesn’t defy human understanding, and that’s true! But I promise you that when your simpler cost model hits customer workloads there will be a reckoning in one direction or another. We could also throw in the towel in the other direction: if this problem is so intractable, why are we building these massive jenga towers of estimations? I think that’s a reasonable position to take too, though it’s one I’ve argued against in the past.
首先，我想我开始完全理解我们在这里争论的复杂性。人们很容易认为我们可以建立一个更简单的成本模型，并且不会违背人类的理解，这是事实！但我向您保证，当您的更简单的成本模型满足客户工作负载时，将会向一个方向或另一个方向进行计算。我们也可以从另一个方向认输：如果这个问题如此棘手，我们为什么要建造这些巨大的叠叠乐塔？我认为这也是一个合理的立场，尽管我过去曾反对过这一立场。

Second is the assymmetry present in the planner’s relationship with customers. None of your customers are going to call you up and offer you more money because the new version of your software ran their query 15% faster, but they will complain if your change made their query even a hair slower. This creates a tendency to fear change: if a change to the planner causes 99% of affected queries to run incrementally faster and 1% to incrementally slow down, that’s a bad change, and if I’m the one bashing on the keyboard to bring it about, the absolute best outcome is that nobody complains. But this kind of incremental change, over time, is how you make a planner robust, and how you slowly dig it out of local maxima. Basically, you have to be able to make Pareto-inefficient changes, and permitting your customers to insulate themselves from those changes is how you make them safely.

其次是规划者与客户关系中存在的不对称性。您的客户不会打电话给您并为您提供更多的钱，因为您的软件的新版本运行他们的查询速度快了 15%，但如果您的更改使他们的查询速度变慢了一点点，他们就会抱怨。这就产生了一种害怕改变的倾向：如果对规划器的改变导致 99% 受影响的查询运行速度逐渐加快，而 1% 的查询运行速度逐渐减慢，那么这就是一个糟糕的改变，如果我是那个敲击键盘带来的改变对此，最好的结果绝对是没有人抱怨。但随着时间的推移，这种增量变化是让规划器变得稳健的方法，也是你如何慢慢地将其从局部最大值中挖掘出来的方法。基本上，您必须能够进行帕累托低效的更改，并且让您的客户将自己与这些更改隔离开来，这就是您安全地进行更改的方法。

Where does this leave us? I think unfortunately more-or-less at the same place we started, but hopefully a little wiser: a cost model is effectively a set of beliefs your software holds about the real-world. Sometimes they will be wrong. Or right! Or wrong in one case, and right in another. Or right today, and wrong tomorrow.

这给我们留下了什么？我认为不幸的是或多或少与我们开始的地方相同，但希望更明智一点：成本模型实际上是你的软件对现实世界所持有的一组信念。有时他们会错。或者说对了！或者在一种情况下是错误的，在另一种情况下是正确的。或者今天对，明天错。

-----

[[https://www.youtube.com/watch?v=D1W520QVS4I&t=189s][(19) 【硬核】一口气了解国债，这么一直借下去真的可以么？ - YouTube]](https://www.youtube.com/watch?v=D1W520QVS4I&t=189s)

外债违约处理方式发现就是3D: deflation(紧缩)，default（违约），delay（拖延）

现在国家都倾向于降低利率来刺激经济，只不过不要搞到恶心（快速）的通货膨胀就好了，适当的膨胀是好事情。

通货膨胀的定义可以根据不同的经济学观点和国家而有所不同。以下是通常用于描述通货膨胀的两种常见定义：

- 通货膨胀作为物价上涨的现象：通货膨胀定义为一般物价水平的持续上涨。当消费者或生产者在购买和销售商品和服务时，发现价格逐渐上升，就可以说经济处于通货膨胀状态。
- 通货膨胀作为货币供应量增加的现象：通货膨胀也可以定义为货币供应量的持续增加。当经济体系中的货币供应量增加，超过经济的实际需求，导致过多的货币追逐有限的商品和服务时，物价就会上涨。

需要注意的是，通货膨胀并不一定是坏事。适度的通货膨胀可以促进经济活动、鼓励投资和消费，并可以降低实际债务负担。然而，高速或超过预期的通货膨胀可能导致经济不稳定、购买力下降和不确定性增加，需要采取相应的货币政策和经济管理措施来应对。

-----

[[https://www.youtube.com/watch?v=MdIL4rxiYDM&t=459s][(19) 一口气了解银行游戏规则 中美银行体系 - YouTube]](https://www.youtube.com/watch?v=MdIL4rxiYDM&t=459s)

工（工商）建（建设）中（外汇）农（农业），这几个银行的规模依然是全球银行中的前四，可谓是市场化程度之低。

https://zh.wikipedia.org/wiki/%E4%B8%96%E7%95%8C%E6%9C%80%E5%A4%A7%E9%93%B6%E8%A1%8C%E5%88%97%E8%A1%A8

扩大之后的六大：交通（22），邮政储蓄（20），并且之后也发展出许多政策性银行。

之后国家鼓励竞争，允许这些银行也参与到市场活动中去，并且还有许多其他股份制银行比如招商和广发也参与其中。

-----

[[https://blog.pragmaticengineer.com/the-product-minded-engineer/][The Product-Minded Software Engineer - The Pragmatic Engineer --- 以产品为中心的软件工程师 - 务实的工程师]](https://blog.pragmaticengineer.com/the-product-minded-engineer/)


以产品为导向的工程师是对产品本身非常感兴趣的开发人员。他们想要了解为什么做出决策、人们如何使用产品，并且喜欢参与产品决策。如果他们决定放弃工程的乐趣，他们很可能会成为一名优秀的产品经理。我曾与许多优秀的具有产品意识的工程师一起工作，并认为自己就是这种开发人员。在打造世界一流产品的公司中，具有产品意识的工程师将团队的影响力提升到了一个新的水平。

- Proactive with product ideas/opinions 积极提出产品想法/意见
- Interest in the business, user behavior and data on this  对该业务、用户行为和数据的兴趣
- Curiosity and a keen interest in "why?" 好奇心和对“为什么？”的浓厚兴趣
- Strong communicators and great relationships with non-engineers  沟通能力强，与非工程师关系良好
- Offering product/engineering tradeoffs upfront   预先提供产品/工程权衡
- Pragmatic handling of edge cases   边缘情况的务实处理
- Quick product validation cycles 快速的产品验证周期
- End-to-end product feature ownership 端到端产品功能所有权
- Strong product instincts through repeated cycles of learning  通过反复学习，具有强烈的产品直觉

Tips to become a more product-minded engineer  成为更具产品意识的工程师的秘诀

If you work on a user-facing product, here are a few tips I've seen work well, to growing your product-minded muscle.

如果您开发面向用户的产品，这里有一些我认为行之有效的技巧，可以增强您的产品意识。

Understand how and why your company is successful. What is the business model? How is money made? What parts are most profitable, what parts of the company are expanding the most? Why? How does your team fit into all of this?

了解您的公司如何以及为何取得成功。商业模式是什么？钱是怎么赚的？哪些部门利润最高，公司哪些部门扩张最多？为什么？您的团队如何适应这一切？

Build a strong relationship with your product manager. Most product managers jump at the opportunity to mentor engineers. Having engineers be interested in product means they can scale themselves more. Before coming in, asking a lot of product questions, take time to build this relationship and make it clear to your product manager, that you'd like to get more involved in product topics.

与您的产品经理建立牢固的关系。大多数产品经理都会抓住指导工程师的机会。让工程师对产品感兴趣意味着他们可以更大程度地扩展自己。在进来之前，询问很多产品问题，花时间建立这种关系，并向您的产品经理明确表示您希望更多地参与产品主题。

Engage in user research, customer support, and other activities, where you can learn more about how the product works. Pair with designers, UX people, data scientists, operations people and others, who frequently interact with users.

参与用户研究、客户支持和其他活动，您可以在其中详细了解产品的工作原理。与设计师、用户体验人员、数据科学家、运营人员和其他经常与用户互动的人员结对。

Bring well-backed product suggestions to the table. After you have a good understanding of the business, the product and stakeholders: take initiative. You could bring small suggestions to a project you are working on. Or you could suggest a larger effort, outlining the engineering effort and the product effort, making this easy to prioritize in the backlog.

提出有充分支持的产品建议。在您对业务、产品和利益相关者有了很好的了解之后：采取主动。您可以为您正在从事的项目提出一些小建议。或者，您可以建议进行更大的工作，概述工程工作和产品工作，以便在待办事项中轻松确定优先级。

Offer product/engineering tradeoffs for the projects you work on. Think of not only making engineering tradeoffs for the product feature your team is building but suggest product tradeoffs that result in less engineering effort. Be open to the feedback on these from others.

为您从事的项目提供产品/工程权衡。不仅要考虑对团队正在构建的产品功能进行工程权衡，还要考虑建议产品权衡以减少工程工作量。对其他人的反馈持开放态度。

Ask for frequent feedback from your product manager. Being a great product-minded engineer means you have built up good product skills, on top of your existing engineering skillset. The best person to give you feedback on how you're doing on the product skillset is your product manager. Reach out for feedback on how valuable they see your product suggestions and ask for thoughts on areas for further growth.

经常向你的产品经理寻求反馈。成为一名优秀的具有产品意识的工程师意味着您在现有的工程技能基础上建立了良好的产品技能。向您提供产品技能方面的反馈的最佳人选是您的产品经理。寻求反馈，了解他们认为您的产品建议有多有价值，并询问对进一步发展领域的想法。

-----

[[https://www.youtube.com/watch?v=EdTPykGAe0Q][(18) 一口气了解英伟达，芯片新王凭什么是他？ - YouTube]](https://www.youtube.com/watch?v=EdTPykGAe0Q)

感觉老黄真的是很有信念的人。初期100人到只剩下30人，资金只够维持9个月，完了比特币市场萎缩跌去46%之后，趁这两个大的转折下都能硬挺过来，说明这个公司反脆弱性也是够强的。

PS: https://youtu.be/EdTPykGAe0Q?t=1139 这里也说了老黄犯过的一系列错误，股价回撤超过50%了好几次，但是每次都能逆势搞回来。
