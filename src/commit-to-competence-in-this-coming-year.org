#+title: Commit to competence in this coming year 致力于来年的能力


注：这篇文章写的非常好，我最近在读《庄子》，无用和有用之间其实都是人为界定的，但是人为的标准同时也在不断地变化中。现在看起来无用的东西，说不定未来会有用。所以做任何事情，如果可以抛开有用和无用的判断，只专注事情本身，把这件事情做到可以称为美的境界。

[[https://world.hey.com/dhh/commit-to-competence-in-this-coming-year-feb7d7c5][致力于来年的能力 --- Commit to competence in this coming year]]

It’s that time of year where people often start thinking about new year’s resolutions. I want to lose 10 lbs, I want to read more books, I want to x, y, and z. Often, it’s just a fantasy. They’re not actually going to lose 10 lbs or they might order some more books but never read them. But at least there’s a spark of hope there. A fundamental faith that they could become a better them. I think that’s tremendously admirable.
每年的这个时候，人们常常开始思考新年的决心。我想要减掉 10 磅，我想要读更多的书，我想要 x、y 和 z。很多时候，这只是一个幻想。他们实际上不会减掉 10 磅，或者他们可能会订购更多的书，但从未阅读过。但至少那里还有希望的火花。一个基本的信念，即他们可以成为更好的自己。我认为这是非常令人钦佩的。

The trouble with a lot of these aspirations, though, is that they require the formation of new habits and carving out new chunks of time in an already busy day. That’s not impossible, of course, but it’s hard.
然而，许多这些愿望的问题在于，它们需要形成新的习惯，并在已经忙碌的一天中腾出新的时间。当然，这并非不可能，但很难。

But the one activity most people already have a huge block of the day carved out is at work. That’s a solid eight hours for the majority of people with a regular job. Forty hours a week. About two thousand a year. Imagine if you spent just 10% of that dedicated to actually getting better at what you do.
但大多数人一天中已经安排了一大块时间的活动就是工作。对于大多数有固定工作的人来说，这八小时是充实的。每周四十小时。一年两千左右。想象一下，如果您只花费其中的 10% 致力于真正改进您所做的事情。

When I think back over my career, this is where the bulk of the advancement happened. Through a commitment to getting better, smarter, faster at what it is I already spend eight hours a day doing, during that time.
当我回顾我的职业生涯时，这就是大部分进步发生的地方。通过致力于变得更好、更聪明、更快，我已经每天花八个小时做这件事。

For me, that’s mostly programming, writing, marketing, and management. Every single one of those disciplines hold the promise for improved effectiveness through increased competence. So spending a healthy chunk of the day in deliberate practice and refinement seems like an easy investment to justify.
对我来说，主要是编程、写作、营销和管理。这些学科中的每一项都有望通过提高能力来提高效率。因此，花一天的大部分时间进行刻意练习和改进似乎是一项很容易证明其合理性的投资。

So what does that actually look like? Let’s take programming. I write a lot of code that’s just meant to solve some problem or implement some feature. There’s usually a quick way to do that by following the path and patterns I already know. That’s the dividend of experience. You’ve done something before, so you can do it again. But it’s also a potential trap.
那么它实际上是什么样子的呢？让我们以编程为例。我编写了很多代码只是为了解决某些问题或实现某些功能。通常有一种快速的方法可以通过遵循我已经知道的路径和模式来做到这一点。这就是经验的红利。你以前做过某件事，所以你可以再做一次。但这也是一个潜在的陷阱。

See, experience will give you a leg up on doing the same things you’ve done before in the same way. But it’ll also raise the price of trying something new, since that might take longer. This is why so many of the big paradigm shifts that happen across disciplines often come from outsiders or even novices. Once you’ve been cooked in experience for too long, the cost of trying something new can seem prohibitive. But spend you must, if you aren’t to stagnate.
看，经验会让你在以同样的方式做同样的事情时占据优势。但这也会提高尝试新事物的成本，因为这可能需要更长的时间。这就是为什么跨学科发生的许多重大范式转变往往来自局外人甚至新手。一旦你积累了太长时间的经验，尝试新事物的成本就会显得令人望而却步。但如果你不想停滞不前，就必须花钱。

So with programming, I try to make it a point of frequently taking the longer route. First, I don’t just want the thing I’m working on to merely work. I mean, that’s step one, but we can’t stop there. As the saying goes: make it work, make it right, make it fast. And then, let me add one more: Make it beautiful.
因此，在编程时，我尝试经常采取较长的路线。首先，我不只是希望我正在做的事情能够发挥作用。我的意思是，这是第一步，但我们不能就此止步。俗话说：让它工作、让它正确、让它快速。然后，让我再补充一点：让它变得美丽。

This focus on aesthetics is a form a deliberate practice. When the bar isn’t just a completed task but a delightful solution, you’re frequently forced to find novel solutions in the wilderness of unfamiliar techniques. There’s so much learning in there. But it requires you to take a breath, look around, and actively search for the hidden flowers of new competency.
这种对美学的关注是一种刻意的实践。当酒吧不仅是一项已完成的任务，而且是一个令人愉快的解决方案时，您经常被迫在不熟悉的技术的荒野中寻找新颖的解决方案。里面有很多学问。但这需要你深吸一口气，环顾四周，积极寻找隐藏的新能力之花。

It’s the old slow is smooth, smooth is fast again. You take another 15 minutes here, or even 2 hours there, and you don’t just get it right, but you reach two steps further by making it beautiful.
原来的慢是平滑，平滑又是快。你在这里再花 15 分钟，甚至在那里花 2 小时，你不仅能把它做好，而且还能通过让它变得美丽而更进一步。

(I’m not going to go into a whole dissertation of what is beauty. If you work professionally within any area of competency, you need to develop that eye first. Even if you can’t explain exactly what makes a beautiful piece of code, design, or prose, you ought to be able to recognize it. Without this ability to recognize excellence, you’re never going to be able to get that. But let’s assume you have this basic, junior appreciation already in place.)
（我不会深入探讨什么是美。如果你在任何能力领域内专业工作，你需要首先培养你的眼睛。即使你无法准确解释是什么造就了一段美丽的代码、设计或散文，你应该能够识别它。如果没有这种识别卓越的能力，你永远无法做到这一点。但让我们假设你已经具备了这种基本的、初级的欣赏能力。）

I find that it’s in this search for aesthetic satisfaction that so many of the best lessons are found. I’m not talking about ornamentation or bells and whistles. I’m taking about the beauty of the four Cs: Clarity, cohesion, consistency, and conciseness. If you have the eye, you’ll recognize them easily (even if getting there isn’t quite so easy).
我发现正是在这种对审美满足的追求中，我们找到了许多最好的教训。我不是在谈论装饰或花哨的东西。我正在考虑四个 C 的优点：清晰、内聚、一致性和简洁。如果您有眼睛，您会很容易认出它们（即使到达那里并不那么容易）。

The most practical way I know how to put this principle into action is by reading and rewriting the draft. Everything has a draft, even decisions about management. Step one is not to overthink the initial inspiration. Just get it out of your head and down on paper. Now you have something you can work with, something you can mold.
我知道如何将这一原则付诸实践的最实际方法是阅读并重写草稿。一切都有草案，甚至管理决策也是如此。第一步是不要过度思考最初的灵感。把它从你的脑海中拿出来并写在纸上。现在你有了可以使用的东西，可以塑造的东西。

With programming, that’s the pull request. Some people might see that primarily as a tool of collaboration with others, but I see it as a tool of collaboration with myself first. It’s where the complete body of work, across multiple code commits, is stationed before it enters the codebase. It’s the ideal place to study by zooming out so you can see the whole solution and question its proportions.
对于编程来说，这就是拉取请求。有些人可能主要将其视为与他人协作的工具，但我首先将其视为与自己协作的工具。这是跨越多个代码提交的完整工作主体在进入代码库之前驻扎的地方。这是通过缩小学习的理想场所，这样您就可以看到整个解决方案并质疑其比例。

That’s why I’m a [[https://world.hey.com/dhh/the-advantages-of-large-long-running-pull-requests-c33d913c][big fan of large, long-running pull requests]]. The size isn’t nearly as important as the cohesion of the scope. You have to be able to see the total sum of changes to evaluate the design.
这就是为什么我非常喜欢大型、长期运行的拉取请求。规模并不像范围的凝聚力那么重要。您必须能够看到更改的总和才能评估设计。

If there’s anything I see juniors often miss, it’s this. Careful, repeated, hell, even obsessive, study of their own work. For programmers that means poring over that pull request of theirs over and over again until it’s as aesthetically pleasing as it is functionally correct. To the level of every line break, every new domain word, every expansion of existing classes or methods.
如果说我看到后辈们经常错过什么的话，那就是这个了。仔细、重复、地狱般、甚至痴迷地研究自己的工作。对于程序员来说，这意味着一遍又一遍地研究他们的拉取请求，直到它在美观和功能上都正确为止。到每个换行符、每个新域单词、现有类或方法的每个扩展的级别。

“But I don’t have time!”, is what I often hear. Or, even worse, “it doesn’t matter, just ship it!”. But it does matter. Because your career, and even your business, is not a single sprint. It’s an intellectual iron man repeated until you’re in the ground. Whatever time you take to refine your technique now will be paid back to you for the next 20-40-60 years of your career. Getting your posture right early is how you reap those dividends of good form.
“但是我没有时间！”这是我经常听到的。或者，更糟糕的是，“没关系，发货就行！”。但这确实很重要。因为你的职业生涯，甚至你的企业，都不是一次冲刺。这是一个智力钢铁侠的重复，直到你入土为安。无论你现在花多少时间来完善你的技术，你都会在接下来的 20-40-60 年的职业生涯中得到回报。尽早采取正确的姿势才能获得良好形式的好处。

It’s the same thing with writing. Not just for public consumption, like this, but for internal communication as well. Every comment, every proposal, every bug report is an opportunity to become a little better, a little clearer, and a little more persuasive. But you have to work on it, it doesn’t just happen.
写作也是一样。不仅仅是为了公共消费，像这样，而且也为了内部沟通。每一个评论、每一个建议、每一个错误报告都是一个变得更好一点、更清晰一点、更有说服力一点的机会。但你必须努力，它不会自然发生。

I love that loop. Write, revise, write, revise. It’s like doing reps in a gym. You can’t expect that 10 pull-ups will add any discernible new muscle. But 30 pull-ups, across three sets, done thrice a week, for a year? Yeah, you’re going to notice the cumulative results of that.
我喜欢那个循环。写，修改，写，修改。这就像在健身房里做重复动作一样。你不能指望 10 次引体向上就能增加任何明显的新肌肉。但是一年做 30 个引体向上，分成三组，每周做三次？是的，你会注意到它的累积结果。

But you have to decide that this matters. The incremental but relentless pursuit of betterment. Taking two beats to get it right, not just getting it working. To slow down, so that you can do it smoothly, so that you can eventually become quicker than you ever imagined.
但你必须决定这很重要。渐进但不懈地追求进步。花两步才能把事情做好，而不仅仅是让它发挥作用。放慢速度，这样你才能顺利地完成，这样你最终才能变得比你想象的更快。

It’s all possible. Work offers endless opportunities and plenty of time. The main blocker is your will to see it so. Try moving that blocker out of the way for 2024. You’ll be amazed what a year can move if you make it count.
一切皆有可能。工作提供了无限的机会和充足的时间。主要的障碍是你的意愿。尝试在 2024 年消除这个障碍。如果你认真对待，你会惊讶地发现这一年可以改变什么。
